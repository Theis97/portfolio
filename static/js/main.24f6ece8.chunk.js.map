{"version":3,"sources":["overview.module.css","title.module.css","features/project_display/ProjectDisplay.module.css","nav.module.css","projects.module.css","contact.module.css","features/project_card/ProjectCard.module.css","assets/me.png","features/project_card/ProjectCard.js","assets/mf-wallpaper.png","assets/doodle3.png","assets/clouds.png","assets/stars.png","features/project_display/ProjectDisplay.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","ProjectCard","props","state","isHeaderOnTop","currCardStyle","this","isActive","styles","card","active","textStyle","cardText","opened","imageURL","content","title","desc","React","cloneElement","className","header","body","window","innerWidth","native","config","slow","from","transform","to","h3","style","friction","delay","opacity","div","height","onClick","cardClicked","backgroundImage","Component","cards","href","mfImg","doodleImg","cloudImg","starsImg","ProjectDisplay","isCardActive","activeId","id","e","target","tagName","setState","display","map","key","bind","App","birthday","Date","today","age","Math","floor","nav","title_text","overview","portrait","src","myFace","alt","about","projects","contact","counterSlice","createSlice","name","initialState","value","reducers","increment","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24f6ece8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sizes\":\"\\\"./CSS-values/breakpoints.module.css\\\"\",\"small\":\"(max-width: 599px)\",\"medium\":\"(min-width: 600px) and (max-width: 999px)\",\"large\":\"(min-width: 1000px)\",\"small-height\":\"(max-height: 399px)\",\"XL\":\"(min-width: 1400px)\",\"overview\":\"overview_overview__2DoyV\",\"portrait\":\"overview_portrait__14H79\",\"about\":\"overview_about__32Z4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sizes\":\"\\\"./CSS-values/breakpoints.module.css\\\"\",\"bp-small\":\"(max-width: 599px)\",\"medium\":\"(min-width: 600px) and (max-width: 999px)\",\"large\":\"(min-width: 1000px)\",\"small-height\":\"(max-height: 399px)\",\"medium-height\":\"(min-height: 400px) and (max-height: 799px)\",\"large-height\":\"(min-height: 800px)\",\"title\":\"title_title__mXTLV\",\"title-text\":\"title_title-text__2n-7x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sizes\":\"\\\"../../CSS-values/breakpoints.module.css\\\"\",\"small\":\"(max-width: 599px)\",\"medium\":\"(min-width: 600px) and (max-width: 999px)\",\"large\":\"(min-width: 1000px)\",\"display\":\"ProjectDisplay_display__2fVU9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sizes\":\"\\\"./CSS-values/breakpoints.module.css\\\"\",\"small\":\"(max-width: 599px)\",\"medium\":\"(min-width: 600px) and (max-width: 999px)\",\"large\":\"(min-width: 1000px)\",\"small-height\":\"(max-height: 399px)\",\"medium-height\":\"(min-height: 400px) and (max-height: 799px)\",\"large-height\":\"(min-height: 800px)\",\"nav\":\"nav_nav__3adyv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sizes\":\"\\\"./CSS-values/breakpoints.module.css\\\"\",\"small\":\"(max-width: 599px)\",\"medium\":\"(min-width: 600px) and (max-width: 999px)\",\"large\":\"(min-width: 1000px)\",\"small-height\":\"(max-height: 399px)\",\"XL\":\"(min-width: 1400px)\",\"projects\":\"projects_projects__nxEvp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sizes\":\"\\\"./CSS-values/breakpoints.module.css\\\"\",\"small\":\"(max-width: 599px)\",\"medium\":\"(min-width: 600px) and (max-width: 999px)\",\"large\":\"(min-width: 1000px)\",\"contact\":\"contact_contact__1GGzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sizes\":\"\\\"../../CSS-values/breakpoints.module.css\\\"\",\"small\":\"(max-width: 599px)\",\"medium\":\"(min-width: 600px) and (max-width: 999px)\",\"large\":\"(min-width: 1000px)\",\"card\":\"ProjectCard_card__CAPBQ\",\"cardText\":\"ProjectCard_cardText__3lTCG\",\"active\":\"ProjectCard_active__LEymQ\"};","export default __webpack_public_path__ + \"static/media/me.ec4aa9f8.png\";","import React from 'react';\r\nimport { Spring, animated, config } from 'react-spring/renderprops';\r\nimport styles from './ProjectCard.module.css';\r\n\r\nexport class ProjectCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {isHeaderOnTop: false};\r\n  }\r\n\r\n  render() {\r\n    const currCardStyle = this.props.isActive ? styles.card + \" \" + styles.active : styles.card;\r\n    const textStyle = styles.cardText + \" \" + (this.state.isHeaderOnTop ? styles.opened : \"\");\r\n\r\n    const imageURL = this.props.content.imageURL;\r\n    const title = this.props.content.title;\r\n    const desc = React.cloneElement(this.props.content.desc, {className: textStyle});\r\n\r\n    let header = <h3>{title}</h3>;\r\n    let body = desc;\r\n    if (window.innerWidth > 999) {\r\n      header = <Spring\r\n          native\r\n          config={ config.slow }\r\n          from={{ transform: this.props.isActive ? 'translateY(275px)' : 'translateY(0px)' }}\r\n          to={{ transform: this.props.isActive ?  'translateY(0px)' : 'translateY(275px)' }}>\r\n          {props => (<animated.h3 style={props}>{title}</animated.h3>)}\r\n        </Spring>;\r\n\r\n      body = <Spring\r\n        native\r\n        config={{ friction: 45, delay: 600 }}\r\n        from={{ opacity: this.props.isActive ? 0 : 1 }}\r\n        to={{ opacity: this.props.isActive ? 1 : 0 }}>\r\n        {props => (<animated.div style={props}>{desc}</animated.div>)}\r\n      </Spring>;\r\n\r\n    } else {\r\n      body = <Spring\r\n        native\r\n        from={{ height: this.props.isActive ? 0 : 'auto' }}\r\n        to={{ height: this.props.isActive ? 'auto' : 0 }}>\r\n        {props => (<animated.div style={props}>{desc}</animated.div>)}\r\n      </Spring>;\r\n    }\r\n\r\n    return (\r\n      <button\r\n        onClick={this.props.cardClicked}\r\n        style={{backgroundImage: 'url(' + imageURL + ')'}}\r\n        className={currCardStyle}\r\n      >\r\n        {header}\r\n        {body}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mf-wallpaper.4a4758d3.png\";","export default __webpack_public_path__ + \"static/media/doodle3.f3911286.png\";","export default __webpack_public_path__ + \"static/media/clouds.b0e2e19a.png\";","export default __webpack_public_path__ + \"static/media/stars.edd0c59f.png\";","import React from 'react';\r\nimport styles from './ProjectDisplay.module.css';\r\nimport { ProjectCard } from '../project_card/ProjectCard.js';\r\nimport mfImg from '../../assets/mf-wallpaper.png'\r\nimport doodleImg from '../../assets/doodle3.png'\r\nimport cloudImg from '../../assets/clouds.png'\r\nimport starsImg from '../../assets/stars.png'\r\n\r\nconst cards = [\r\n  {\r\n    title: \"Project Magic Forest\",\r\n    desc: <ul>\r\n            <li>Magic Forest is a multiplayer virtual reality game with a soothing, mystical atmosphere where players can reflect and store their thoughts while connecting with their friends.</li>\r\n            <li>The project is a collaboration between <a href=\"http://dang-brandon.com/\">Brandon Dang</a>, <a href=\"http://dawnuxi.com/\">Dawn Nguyen</a>, and myself.</li>\r\n            <li>Our goal is to create a virtual space that promotes the user's mental health and helps them make meaningful connections with other people.</li>\r\n            <li>We’re currently developing the project with Unity and Mirror Networking.</li>\r\n            <li>Most of my work on the project consists of implementing game mechanics and multiplayer functionality.</li>\r\n          </ul>,\r\n    imageURL: mfImg\r\n  },\r\n  {\r\n    title: \"WebDoodler\",\r\n    desc: <ul>\r\n            <li>WebDoodler is a little drawing app I built from scratch with pure JavaScript, HTML, and CSS.</li>\r\n            <li>I originally created it for my programming studio final while in college. It was a solo project, and we had a total of 4 weeks to work on it.</li>\r\n            <li>It features a basic brush, an eraser, a line tool, an eyedropper tool, a palette to save colors, variable brush sizes, a selection tool, a layer system, an undo button, a few basic filters, and a way to save images you made or upload your own image to work with.</li>\r\n            <li>You can find the source code for it <a href=\"https://github.com/Theis97/Webdoodler\">here</a>.</li>\r\n          </ul>,\r\n    imageURL: doodleImg\r\n  },\r\n  {\r\n    title: \"This Website\",\r\n    desc: <ul>\r\n            <li>I built this site with React. Most of the animations for these panels use <a href=\"https://www.react-spring.io/\">react-spring</a>.</li>\r\n            <li>I'm still in the process of polishing the site up.</li>\r\n            <li>You can check out the source code for it <a href=\"https://github.com/Theis97/portfolio\">here</a> if you'd like.</li>\r\n          </ul>,\r\n    imageURL: cloudImg\r\n  },\r\n  {\r\n    title: \"More to come, in the future...\",\r\n    desc: <ul>\r\n            <li>Expect to see more projects listed here in the future! In the meantime, why not check out <a href=\"https://github.com/Theis97\">my Github?</a> It has some of the code from the projects listed here, as well as smaller things that didn't make the cut for this showcase.</li>\r\n          </ul>,\r\n    imageURL: starsImg\r\n  }\r\n];\r\n\r\nexport class ProjectDisplay extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isCardActive: false, activeId: 0 };\r\n  }\r\n\r\n  cardClicked(id, e) {\r\n    if (e.target.tagName === \"BUTTON\" || e.target.tagName === \"DIV\") {\r\n      this.setState((state) => ({\r\n        isCardActive: state.activeId !== id ? true : !state.isCardActive,\r\n        activeId: id\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.display}>\r\n        {cards.map((card, id) => (\r\n          <ProjectCard\r\n            key={id}\r\n            content={card}\r\n            cardClicked={this.cardClicked.bind(this, id)}\r\n            isActive={this.state.isCardActive && (this.state.activeId === id)}\r\n          />)\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport myFace from './assets/me.png';\r\nimport { ProjectDisplay } from './features/project_display/ProjectDisplay.js';\r\nimport './App.css';\r\nimport nav from './nav.module.css';\r\nimport title from './title.module.css';\r\nimport overview from './overview.module.css';\r\nimport projects from './projects.module.css';\r\nimport contact from './contact.module.css';\r\n\r\nfunction App() {\r\n  const birthday = new Date(868021200000); // July 4th, 1997 8am CST in UTC\r\n  const today = new Date();\r\n  const age = Math.floor((today - birthday)/31556926000); // convert from milliseconds to years\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className={nav.nav}>\r\n        <h2><a href=\"#overview\">About Me</a></h2>\r\n        <h2><a href=\"#projects\">Projects</a></h2>\r\n        <h2><a href=\"#contact\">Contact</a></h2>\r\n      </nav>\r\n      <section className={title.title}>\r\n        <div className={title.title_text}>\r\n          <h1>Susan Theis</h1>\r\n          <small>Software Developer</small>\r\n        </div>\r\n      </section>\r\n      <section id=\"overview\" className={overview.overview}>\r\n        <h2>About Me</h2>\r\n        <div className={overview.portrait}>\r\n          <img src={myFace} alt=\"Me\" />\r\n        </div>\r\n        <div className={overview.about}>\r\n          <p>\r\n            I'm a {age} year old Software Developer living in the Chicago suburbs.\r\n            I got my Bachelor's degree in Computer Science from the University\r\n            of Illinois at Urbana-Champaign, where I was also a member of the\r\n            Marching Illini (Go Illini!). In addition to programming, I also enjoy\r\n            drawing, writing, playing video games, and obsessing over my favorite\r\n            shows with my friends.\r\n          </p>\r\n          <p>\r\n            My mission is to create software that makes the world a better place,\r\n            whether that's by providing solutions for tough problems or by simply\r\n            bringing people joy. Lately, I've been working with a small team to\r\n            create a virtual reality experience that aims to promote the user's\r\n            mental health and let them connect with other people. You can read\r\n            more about it in the projects section below.\r\n          </p>\r\n        </div>\r\n      </section>\r\n      <section id=\"projects\" className={projects.projects}>\r\n        <h2>My Projects</h2>\r\n        <ProjectDisplay/>\r\n      </section>\r\n      <section id=\"contact\" className={contact.contact}>\r\n        <h2>Want to get in touch?</h2>\r\n        <ul>\r\n          <li>✉ <a href=\"mailto:sttheis97@gmail.com\">sttheis97@gmail.com</a></li>\r\n          <li><a href=\"https://www.linkedin.com/in/susan-theis-260465187/\">Linkedin</a></li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}